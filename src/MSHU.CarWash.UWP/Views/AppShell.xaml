<views:BasePage
    x:Class="MSHU.CarWash.UWP.Views.AppShell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MSHU.CarWash.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:MSHU.CarWash.UWP.Controls"
    xmlns:views="using:MSHU.CarWash.UWP.Views"
    mc:Ignorable="d"
    xmlns:vm="using:MSHU.CarWash.UWP.ViewModels"
    d:DataContext="{Binding Source={d:DesignInstance IsDesignTimeCreatable=True, Type=vm:AppShellViewModel}}">

    <Page.Resources>
        <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="controls:NavigationMenuItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Showing a ToolTip and the Label is redundant.  We put the ToolTip on the icon.
                     It appears when the user hovers over the icon, but not the label which provides
                     value when the SplitView is 'Compact' while reducing the likelihood of showing
                     redundant information when the label is shown.-->
                <FontIcon x:Name="Glyph" FontSize="16" Glyph="{x:Bind SymbolAsChar}" 
                          VerticalAlignment="Center" HorizontalAlignment="Center" 
                          ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock x:Name="Text" Grid.Column="1" Text="{x:Bind Label}" Padding="0,0,24,0" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <RelativePanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource BrushDarkBlue}">
        <!-- Adaptive triggers -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay"/>
                        <Setter Target="FooterPanel.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.AlignTopWithPanel="True"
              Visibility="{Binding InternetAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
<!-- Top-level navigation menu + app content -->
            <SplitView x:Name="RootSplitView"
                   DisplayMode="CompactInline"
                   OpenPaneLength="158"
                   IsTabStop="False">
                <SplitView.Pane>
                    <RelativePanel Background="{StaticResource BrushDarkBlue}">
                        <!-- A custom ListView to display the items in the pane.  The automation Name is set in the ContainerContentChanging event. -->
                        <controls:NavigationMenuListView x:Name="NavMenuList"
                                                     Foreground="White"
                                                     TabIndex="3"
                                                     Margin="0,48,0,0" 
                                                     HorizontalContentAlignment="Stretch"
                                                     HorizontalAlignment="Stretch"
                                                     ContainerContentChanging="NavMenuItemContainerContentChanging"
                                                     ItemContainerStyle="{StaticResource NavListViewItemStyle}"
                                                     ItemTemplate="{StaticResource NavMenuItemTemplate}"
                                                     ItemInvoked="NavMenuList_ItemInvoked"
                                                     RelativePanel.AlignTopWithPanel="True">
                            <controls:NavigationMenuListView.Header>
                                <!-- Using this custom back navigation button until the system-provided back button is enabled. -->
                                <Button x:Name="BackButton"
                                TabIndex="2"
                                Style="{StaticResource NavigationBackButtonStyle}"
                                IsEnabled="{Binding AppFrame.CanGoBack, ElementName=Root}"
                                Width="{Binding ItemsPanelRoot.Width, ElementName=NavMenuList}"
                                HorizontalAlignment="{Binding ItemsPanelRoot.HorizontalAlignment, ElementName=NavMenuList}"
                                Click="BackButton_Click"/>
                            </controls:NavigationMenuListView.Header>
                        </controls:NavigationMenuListView>
                        <StackPanel x:Name="FooterPanel" Orientation="Vertical" RelativePanel.AlignBottomWithPanel="True">
                            <Image Source="Assets/microsoft-sdk.png" AutomationProperties.Name="Microsoft Logo" Stretch="None" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                            <TextBlock x:Name="Copyright" Text="&#xA9; Microsoft Corporation. All rights reserved." Style="{StaticResource CopyrightTextStyle}"
                                   RelativePanel.Above="LinksPanel" Margin="10,10,0,0" FontSize="12"
                                   Foreground="White" TextWrapping="Wrap"/>
                            <StackPanel x:Name="LinksPanel" Orientation="Horizontal" Margin="10,10,0,10">
                                <HyperlinkButton Content="Trademarks" 
                                             Tag="http://www.microsoft.com/About/Legal/EN/US/IntellectualProperty/Trademarks/EN-US.aspx"
                                             Click="Footer_Click" FontSize="12" 
                                             Style="{StaticResource HyperlinkStyle}" />
                                <TextBlock Text="|"  Style="{StaticResource SeparatorStyle}" VerticalAlignment="Center" />
                                <HyperlinkButton x:Name="PrivacyLink" Content="Privacy" 
                                             Tag="http://privacy.microsoft.com" 
                                             Click="Footer_Click" FontSize="12" 
                                             Style="{StaticResource HyperlinkStyle}"/>
                            </StackPanel>
                        </StackPanel>
                    </RelativePanel>
                </SplitView.Pane>

                <SplitView.Content>
                    <!-- OnNavigatingToPage we synchronize the selected item in the nav menu with the current page.
                 OnNavigatedToPage we move keyboard focus to the first item on the page after it's loaded. -->
                    <Frame x:Name="frame"
                   Navigating="OnNavigatingToPage"
                   Navigated="OnNavigatedToPage">
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition>
                                    <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                        <EntranceNavigationTransitionInfo/>
                                    </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                </NavigationThemeTransition>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>
                </SplitView.Content>

            </SplitView>

            <!-- Declared last to have it rendered above everything else, but it needs to be the first item in the tab sequence. -->
            <ToggleButton x:Name="TogglePaneButton"
                      TabIndex="1"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Unchecked="TogglePaneButton_Unchecked"
                      Checked="TogglePaneButton_Checked"
                      AutomationProperties.Name="Menu"
                      ToolTipService.ToolTip="Menu" Foreground="White" />
        </Grid>
        <TextBlock                        
            Text="Unfortunately, this app cannot work without Internet connection."
            TextWrapping="Wrap" TextAlignment="Center"
            Visibility="{Binding InternetAvailable, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Foreground="White" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True"/>
    </RelativePanel>
</views:BasePage>
