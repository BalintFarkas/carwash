# CarWash CI
# Docs: https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - master
  - releases/*

pool:
  vmImage: "vs2017-win2016"

variables:
  buildConfiguration: "Release"

steps:
  - task: DotNetCoreCLI@2
    displayName: "Restore NuGet packages"
    inputs:
      command: restore
      projects: "**/*.csproj"

  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: "Prepare analysis on SonarCloud"
    inputs:
      SonarCloud: SonarCloud
      organization: "mark-szabo-github"
      projectKey: "mark-szabo_carwash"

  - task: DotNetCoreCLI@2
    displayName: "Build API ($(buildConfiguration))"
    inputs:
      command: build
      projects: "**/CarWash.PWA.csproj"
      arguments: "--configuration $(buildConfiguration)"

  - task: NodeTool@0
    displayName: "Install Node.js"
    inputs:
      versionSpec: "10.x"

  - script: |
      cd $(Build.SourcesDirectory)\CarWash.PWA\ClientApp
      npm install
    displayName: "Restore npm packages for PWA"

  - script: |
      cd $(Build.SourcesDirectory)\CarWash.PWA\ClientApp
      npm run build
    displayName: "Build PWA"

  - task: DotNetCoreCLI@2
    displayName: "Build Bot ($(buildConfiguration))"
    inputs:
      command: build
      projects: "**/CarWash.Bot.csproj"
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: "Build Functions ($(buildConfiguration))"
    inputs:
      command: build
      projects: "**/CarWash.Functions.csproj"
      arguments: "--configuration $(buildConfiguration)"

  - task: DotNetCoreCLI@2
    displayName: "Run tests"
    inputs:
      command: test
      projects: "**/*.Tests/*.csproj"
      arguments: "--configuration $(buildConfiguration)"

  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: "Run Code Analysis"

  - task: DotNetCoreCLI@2
    displayName: "Publish build artifacts"
    inputs:
      command: publish
      publishWebProjects: True
      arguments: "--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)"
      zipAfterPublish: True

  - task: PublishBuildArtifacts@1
    displayName: "Upload build artifact to file container"
